{"version":3,"sources":["../src/electron/shortcuts.ts"],"names":[],"mappings":"AAAA,kEAAkE;AAClE,sEAAsE;;AAEtE,IAAM,qBAAqB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAChE,IAAM,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACvC,IAAA,6BAAG,CAAwB;AAClC,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAG/B;IAKI,mBAAY,GAA2B;QACnC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEM,wBAAI,GAAX;QAAA,iBAQC;QAPG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC,EAAE,UAAC,QAAgB,EAAE,KAAa;YAC7F,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACX,qBAAqB,CAAC,QAAQ,CAAC,KAAI,CAAC,GAAG,EAAE,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBAClE,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,0BAAM,GAAb;QACI,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEhC,kBAAkB;QAClB,qBAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE9C,aAAa;QACb,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,yBAAyB;QACzB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAClD,CAAC;IAEM,0BAAM,GAAb;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,EAAE,CAAA;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC;IAEM,2BAAO,GAAd;QACI,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAEa,iBAAO,GAArB,UAAsB,QAAgB;QAClC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACjD,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IACL,gBAAC;AAAD,CAjDA,AAiDC,IAAA;AAjDY,8BAAS","file":"shortcuts.js","sourcesContent":["/// <reference path=\"../../node_modules/@types/node/index.d.ts\" />\n/// <reference path=\"../../node_modules/@types/electron/index.d.ts\" />\n\nconst electronLocalshortcut = require('electron-localshortcut');\nconst settings = require('electron-settings');\nconst {app} = require('electron');\nconst async = require('async');\n\n\nexport class ShortCuts {\n\n    private win: Electron.BrowserWindow;\n    private isBinded: boolean;\n\n    constructor(win: Electron.BrowserWindow) {\n        this.win = win;\n        this.isBinded = false;\n    }\n\n    public bind(): void {\n        async.forEachOf(settings.getSync('option.shortcut.no-emu.tabs'), (shortcut: string, index: number) => {\n            if (shortcut) {\n                electronLocalshortcut.register(this.win, ShortCuts.convert(shortcut), () => {\n                    this.win.webContents.send('switch-tab', index);\n                });\n            }\n        });\n    }\n\n    public reload(): void{\n        console.log('reload shortcuts');\n\n        // remove all bind\n        electronLocalshortcut.unregisterAll(this.win);\n\n        // bind again\n        this.bind();\n\n        // send IPC to the client\n        this.win.webContents.send('reload-shortcuts');\n    }\n\n    public enable(): void {\n        if (!this.isBinded) {\n            this.bind()\n        } else {\n            electronLocalshortcut.enableAll(this.win);\n        }\n    }\n\n    public disable(): void {\n        electronLocalshortcut.disableAll(this.win);\n    }\n\n    public static convert(shortcut: string): string {\n        shortcut = shortcut.replace('ctrl', 'CmdOrCtrl');\n        return shortcut;\n    }\n}\n"]}